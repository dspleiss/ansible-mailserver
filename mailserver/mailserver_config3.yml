---
- name: Konfiguriere Postfix und Dofecot mit SSL Zertifikaten
  hosts: mailservers
  become: yes

  vars:
    cert_dir: /etc/ssl/custom_certs
    #dateinamen als variable um unterschiedliche für den hostnamen zuordnen zu können
    private_key_file: "{{ cert_dir }}/{{ inventory_hostname }}.key"
    certificate_file: "{{ cert_dir }}/{{ inventory_hostname }}.crt"
    #mail_fqdn als variable um hier bereits fachpra1 oder fachpra2 zuweisen zu können
    mail_fqdn: "{{ inventory_hostname }}.{{ 'fachpra1.local' if inventory_hostname == 'mailserver01' else 'fachpra2.local' }}"
    cert_validity_days: 3650 # Zertifikat ist 10 Jahre gültig

  tasks:
    - name: 1.a Pre-config Postfix "Internet Site"
      debconf:
        name: postfix
        question: postfix/mail_server_type
        value: 'Internet Site'
        vtype: select

    - name: 1.b Pre-config Postfix "Mailname"
      debconf:
        name: postfix
        question: postfix/mailname
        value: "{{ mail_fqdn }}" # beispiel mailserver01.fachpra1.local
        vtype: string

    - name: 2. Install Postfix package
      ansible.builtin.apt:
        name: postfix
        state: present
        update_cache: yes

    - name: 3. erstelle Zertifikatsverzeichnis 
      ansible.builtin.file:
        path: "{{ cert_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: 4. Generiere privaten Schlüssel für {{ mail_fqdn }}
      ansible.builtin.command: "openssl genrsa -out {{ private_key_file }} 4096"
      args:
        creates: "{{ private_key_file }}" # wenn Datei noch nicht vorhanden
      notify: Restart postfix 
 
    - name: 5. nur root darf privaten Schlüssel lesen
      ansible.builtin.file:
        path: "{{ private_key_file }}"
        mode: '0600'
        owner: root
        group: root
      notify: Restart postfix 

    - name: 6. Generiere selbstsignierte X.509-Zertifikat für {{ mail_fqdn }}
      ansible.builtin.command: >
        openssl req -x509 -new -nodes -key {{ private_key_file }}
        -days {{ cert_validity_days }}
        -out {{ certificate_file }}
        -subj "/C=DE/ST=Baden-Wuerttemberg/L=Filderstadt/O=MyLab/OU=IT/CN={{ mail_fqdn }}"
        -addext "subjectAltName=DNS:{{ mail_fqdn }}"
        -addext "extendedKeyUsage=serverAuth"
        -addext "keyUsage=digitalSignature,keyEncipherment"
        -addext "basicConstraints=CA:FALSE"
      args:
        creates: "{{ certificate_file }}" # wenn Datei noch nicht vorhanden
      notify: Restart postfix 

    - name: 7. nur root darf privaten Schlüssel lesen und schreiben
      ansible.builtin.file:
        path: "{{ certificate_file }}"
        mode: '0644'
        owner: root
        group: root
      notify: Restart postfix 

    - name: 8. Postfix main.cf bearbeiten für SSL und TSL
      ansible.builtin.blockinfile:
        path: /etc/postfix/main.cf
        block: |
          smtpd_tls_cert_file = {{ certificate_file }}
          smtpd_tls_key_file = {{ private_key_file }}
          smtpd_tls_security_level = may #diesen Parameter in der Doku erwähnen
          smtp_tls_security_level = may
          # Erzwinge stärkere TLS-Protokolle (nur TLSv1.2 und TLSv1.3)
          smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1 #diese sind unsicher
          smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
        marker: "# {mark} ANSIBLEMARKER SSL/TSL in main.cf"
        backup: yes
      notify: Restart postfix

    - name: 9. alte Snakeoil-Zertifikatspfade auskommentieren
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        # Verbessertes Regex, um optionale Leerzeichen um das '=' zu berücksichtigen
        regexp: '^(?!#).*snakeoil.*$' 
        line: '# \g<0>' #
        state: present
        backup: yes
      notify: Restart postfix

    - name: 10. set home_mailbox to Maildir/ in Postfix main.cf
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        regexp: '^home_mailbox ='
        line: 'home_mailbox = Maildir/'
        insertafter: '^#home_mailbox = Maildir/'
        state: present
      notify: Restart postfix

    - name: 11. starte Postfix
      ansible.builtin.service:
        name: postfix
        state: started
        enabled: yes

    - name: 12. Installiere Dovecot IMAP und POP3
      ansible.builtin.apt:
        name: ["dovecot-imapd", "dovecot-pop3d"] 
        state: present
        update_cache: yes

    - name: 13. set Mailbox-Location to Maildir in 10-mail.conf
      ansible.builtin.lineinfile:
        path: /etc/dovecot/conf.d/10-mail.conf
        regexp: '^mail_location = '
        line: 'mail_location = maildir:~/Maildir'
        backup: yes
      notify: Restart dovecot

    - name: 14. Aktiviere ssl = yes in Dovecot 10-ssl.conf
      ansible.builtin.lineinfile:
        path: /etc/dovecot/conf.d/10-ssl.conf
        regexp: '^ssl = '
        line: 'ssl = yes'
        backup: yes
      notify: Restart dovecot

    - name: 15. Konfiguriere Dovecot SSL-Zertifikatspfade mit Blockinfile
      ansible.builtin.blockinfile:
        path: /etc/dovecot/conf.d/10-ssl.conf
        block: |
          ssl_cert = <{{ certificate_file }}
          ssl_key = <{{ private_key_file }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR CUSTOM DOVECOT SSL CERTS" # Ein eindeutiger Marker, damit Ansible diesen Block bei Bedarf wiederfindet
        create: false # Stellt sicher, dass die Datei bereits existiert
        backup: yes
      notify: Restart dovecot

    - name: 16. Deaktiviere Dovecot-Klartext-Authentifizierung
      ansible.builtin.lineinfile:
        path: /etc/dovecot/conf.d/10-auth.conf
        regexp: '^disable_plaintext_auth = '
        line: 'disable_plaintext_auth = yes'
        backup: yes
      notify: Restart dovecot

    - name: 17. starte Dovecot 
      ansible.builtin.service:
        name: dovecot
        state: started
        enabled: yes

  handlers:
    - name: Restart postfix
      ansible.builtin.service:
        name: postfix
        state: restarted

    - name: Restart dovecot
      ansible.builtin.service:
        name: dovecot
        state: restarted